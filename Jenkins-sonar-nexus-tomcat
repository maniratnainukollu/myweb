pipeline{
    agent any
     environment{
        PATH = "/usr/bin:$PATH"
    }
    stages{
        stage("Git Checkout"){
            steps{
                git credentialsId: 'javahome2', url: 'https://github.com/maniratnainukollu/myweb.git'
            }
        }
        stage("Maven Build"){
            steps{
                sh "mvn clean install"
                
            }
        }
        stage('SonarQube analysis') {
        def mvnHome = tool name:'maven3',type:'maven'
            steps{
                    withSonarQubeEnv('sonar-6') { 
        // If you have configured more than one global server connection, you can specify its name
//                  sh "${mvnHome}/mvn sonar:sonar "
                    
                }
            }
        }
        stage('Upload War To Nexus'){
            steps{
                  nexusArtifactUploader artifacts: [
                       [
                            artifactId: 'myweb', 
                            classifier: '', 
                            file: "target/myweb-8.2.0.war", 
                            type: 'war'
                       ]
                  ], 
                  credentialsId: 'nexuss3', 
                  groupId: 'in.javahome', 
                  nexusUrl: '172.31.41.218:8081', 
                  nexusVersion: 'nexus3', 
                  protocol: 'http', 
                  repository: 'sample-releases', 
                  version: '8.2.0'  
              }
            }
         
        stage("deploy-dev"){
            steps{
                sshagent(['tomcat-new123']) {
                sh """
                    scp -o StrictHostKeyChecking=no target/myweb-8.2.0.war  ec2-user@172.31.10.141:/home/ec2-user/apache-tomcat-9.0.65/webapps/
                    
            
                    
                    
                
                """
            }
            
            }
        }
  }
  }
